name: Test registry

on: [pull_request]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  registry_module:
    runs-on: ubuntu-latest
    name: Use registry module
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Plan
        uses: ./terraform-plan
        env:
          TERRAFORM_CLOUD_TOKENS: app.terraform.io=${{ secrets.TF_API_TOKEN }}
        with:
          path: tests/registry
          label: Single registry

      - name: Apply
        uses: ./terraform-apply
        id: output
        with:
          path: tests/registry
          label: Single registry
        env:
          TERRAFORM_CLOUD_TOKENS: app.terraform.io=${{ secrets.TF_API_TOKEN }}

      - name: Verify outputs
        run: |
          if [[ "${{ steps.output.outputs.word }}" != "hello" ]]; then
            echo "::error:: output not set correctly"
            exit 1
          fi

  multiple_registry_module:
    runs-on: ubuntu-latest
    name: Multiple registries
    env:
      TERRAFORM_CLOUD_TOKENS: |

        terraform.example.com  = Registry doesn't exist

        app.terraform.io   =   ${{ secrets.TF_API_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Plan
        uses: ./terraform-plan
        with:
          path: tests/registry
          label: Multiple registries

      - name: Apply
        uses: ./terraform-apply
        id: output
        with:
          path: tests/registry
          label: Multiple registries

      - name: Verify outputs
        run: |
          if [[ "${{ steps.output.outputs.word }}" != "hello" ]]; then
            echo "::error:: output not set correctly"
            exit 1
          fi

  nonsense_credentials:
    runs-on: ubuntu-latest
    name: Nonsense cloud credentials
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Plan
        uses: ./terraform-plan
        id: plan
        continue-on-error: true
        env:
          TERRAFORM_CLOUD_TOKENS: No thanks
        with:
          path: tests/registry

      - name: Check failed
        run: |
          if [[ "${{ steps.plan.outcome }}" != "failure" ]]; then
            echo "did not fail correctly with nonsense credentials"
            exit 1
          fi
